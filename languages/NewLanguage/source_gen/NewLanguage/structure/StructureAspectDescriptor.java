package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(2);
  /*package*/ final ConceptDescriptor myConceptBase = new ConceptDescriptorBuilder("NewLanguage.structure.Base", MetaIdFactory.conceptId(0xd2af129e2d34893L, 0xa2116092c06be5a5L, 0x30afa9ce0328feb4L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x30afa9ce0328feb8L, "items", MetaIdFactory.conceptId(0xd2af129e2d34893L, 0xa2116092c06be5a5L, 0x30afa9ce0328feb5L), true, true, false)).children(new String[]{"items"}, new boolean[]{true}).sourceNode(new SNodePointer("r:a3092d92-a58c-41c5-a37f-f39873560f6f(NewLanguage.structure)", "3508209337026281140")).create();
  /*package*/ final ConceptDescriptor myConceptItem = new ConceptDescriptorBuilder("NewLanguage.structure.Item", MetaIdFactory.conceptId(0xd2af129e2d34893L, 0xa2116092c06be5a5L, 0x30afa9ce0328feb5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x30afa9ce0328feb6L, "text")).properties("text").sourceNode(new SNodePointer("r:a3092d92-a58c-41c5-a37f-f39873560f6f(NewLanguage.structure)", "3508209337026281141")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptBase.getId(), 0);
    myIndexMap.put(myConceptItem.getId(), 1);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBase, myConceptItem);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptBase;
      case 1:
        return myConceptItem;
      default:
        throw new IllegalStateException();
    }
  }
}
